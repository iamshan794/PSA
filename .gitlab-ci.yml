workflow:
  name: shopping-app
  rules:
    - if: '$CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "main"'
      when: always
    - if: '$CI_MERGE_REQUEST_ID'
      when: always

stages:
  - ".pre"
  - test
  - build
  - integration
  - deploy
  - ".post"

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  IMAGE_TAG: "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
  LATEST_TAG: "$CI_REGISTRY_IMAGE:latest"
  APP_IMG_NAME: "google-adk"

lint_job:
  stage: ".pre"
  resource_group: development
  tags:
    - shopping_app
  script:
    - echo "Running linting checks..."
    # Add actual linting commands here
    # - flake8 . || pylint . || your_linter
    - echo "Lint Successful"
  allow_failure: false

unit_test_job:
  stage: test
  variables:
    ENV_FILE_DESTINATION: "/workspace/multi_tool_agent/.env"
  tags:
    - shopping_app
  needs:
    - lint_job
  resource_group: development
  script:
    - echo "Running unit tests..."
    - mkdir -p "$(dirname "$ENV_FILE_DESTINATION")"
    - cp "$AGENT_ENV_FILE" "$ENV_FILE_DESTINATION"
    - docker build -t "$APP_IMG_NAME" .
    - docker run --rm \
        --name "${APP_IMG_NAME}_test_instance" \
        -p "8000:8000" \
        -p "8501:8501" \
        -v "$PWD:/workspace" \
        -e ENV_FILE_DESTINATION="$ENV_FILE_DESTINATION" \
        "$APP_IMG_NAME" \
        bash -c "
          adk api_server --host=0.0.0.0 && curl -f http://localhost:8000/docs/
        "
    - echo "Unit tests completed"
  allow_failure: false

mongodb_test_job:
  stage: test
  tags:
    - shopping_app
  needs:
    - lint_job
  resource_group: development
  script:
    - echo "Testing MongoDB connectivity..."
    - docker run --rm --name mongodb-test -d mongo:latest
    - sleep 10
    - >
      docker exec mongodb-test mongosh --eval "db.runCommand({ ping: 1 })" ||
      echo "MongoDB basic test failed"
    - docker stop mongodb-test
    - echo "MongoDB test completed"
  allow_failure: false
